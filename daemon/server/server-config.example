# Tunnel Server Daemon Configuration (LEGACY)
# This is the legacy environment variable configuration format.
# NEW: Use config.yaml.example for the modern YAML configuration format.
# Copy this file to /etc/tunnel-server/config and customize for your environment

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# Listen address and port
# Use :8443 for all interfaces, or specify IP:PORT for specific interface
TUNNEL_LISTEN_ADDR=:8443

# Authentication token
# Must match the token configured on tunnel clients
# Use a strong, random token for production
TUNNEL_TOKEN=your-production-token-here

# =============================================================================
# TLS/SSL SETTINGS
# =============================================================================

# TLS certificate file path
# Leave empty to run without TLS (not recommended for production)
# For Let's Encrypt: /etc/letsencrypt/live/your-domain.com/fullchain.pem
# For self-signed: /etc/tunnel-server/certs/server.crt
TUNNEL_CERT_PATH=/etc/tunnel-server/certs/server.crt

# TLS private key file path
# For Let's Encrypt: /etc/letsencrypt/live/your-domain.com/privkey.pem
# For self-signed: /etc/tunnel-server/certs/server.key
TUNNEL_KEY_PATH=/etc/tunnel-server/certs/server.key

# =============================================================================
# MIGRATION TO YAML CONFIG (RECOMMENDED)
# =============================================================================
# For better flexibility and easier management, consider migrating to:
# /etc/tunnel-server/config.yaml (see config.yaml.example)
#
# Benefits of YAML config:
# - Add unlimited custom services without code changes
# - Better validation and error handling
# - Environment variable overrides still supported
# - More readable and maintainable
#
# Usage: tunnel-server -config /etc/tunnel-server/config.yaml

# =============================================================================
# LEGACY PORT CONFIGURATION (Still supported)
# =============================================================================

# TCP forwarder port configuration
# Set to 0 to disable a specific forwarder
TUNNEL_WEB_PORT=8080
TUNNEL_DB_PORT=5432
TUNNEL_SSH_PORT=2222
TUNNEL_MONGO_PORT=27017
TUNNEL_K8S_PORT=16443

# Enable/disable specific forwarders
# Set to false to completely disable a forwarder
TUNNEL_ENABLE_WEB=true
TUNNEL_ENABLE_DB=true
TUNNEL_ENABLE_SSH=true
TUNNEL_ENABLE_MONGO=true
TUNNEL_ENABLE_K8S=false

# =============================================================================
# OPTIONAL SETTINGS
# =============================================================================

# Use improved implementation (recommended)
TUNNEL_USE_IMPROVED=true

# =============================================================================
# COMMON CONFIGURATIONS
# =============================================================================

# Production with Let's Encrypt:
# TUNNEL_CERT_PATH=/etc/letsencrypt/live/your-domain.com/fullchain.pem
# TUNNEL_KEY_PATH=/etc/letsencrypt/live/your-domain.com/privkey.pem

# Development without TLS:
# TUNNEL_CERT_PATH=
# TUNNEL_KEY_PATH=

# Custom domain with self-signed certificates:
# TUNNEL_CERT_PATH=/etc/tunnel-server/certs/server.crt
# TUNNEL_KEY_PATH=/etc/tunnel-server/certs/server.key

# Running on Kubernetes master node (disable K8s forwarder):
# TUNNEL_ENABLE_K8S=false
# TUNNEL_K8S_PORT=16443

# Custom port configuration for specific services:
# TUNNEL_WEB_PORT=18080
# TUNNEL_DB_PORT=15432
# TUNNEL_SSH_PORT=12222
# TUNNEL_MONGO_PORT=127017

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Keep this file secure with proper permissions (640)
# - Never commit tokens to version control
# - Use strong, unique tokens for production
# - Regularly rotate authentication tokens
# - Use TLS certificates in production environments
# - Certificate file permissions: 644 (readable by all)
# - Private key permissions: 640 (readable by tunnel-server group only)
# - Certificate ownership: root:tunnel-server
# 
# Manual permission fix if needed:
# sudo chmod 644 /etc/tunnel-server/certs/server.crt
# sudo chmod 640 /etc/tunnel-server/certs/server.key
# sudo chown root:tunnel-server /etc/tunnel-server/certs/server.*