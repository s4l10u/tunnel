# Docker Compose Tunnel Server Configuration
# Optimized for containerized deployment with environment variable expansion

server:
  listen: ":8443"
  token: "development-token-do-not-use-in-production"  # Fixed for Docker demo
  improved: true
  tls:
    cert: ""  # Empty for development (no TLS)
    key: ""   # Empty for development (no TLS)

forwarders:
  # Web Application Tunnel (Always enabled for demo)
  - name: "web"
    port: 8088
    client_id: "airgap-web"
    enabled: true
    description: "Web application tunnel - targets are configured on client side"
    
  # Database Tunnel
  - name: "database"
    port: 5432
    client_id: "airgap-db"
    enabled: true
    description: "PostgreSQL database tunnel - targets are configured on client side"
    
  # SSH Access Tunnel
  - name: "ssh"
    port: 2222
    client_id: "airgap-ssh"
    enabled: false
    description: "SSH access tunnel - targets are configured on client side"
    
  # MongoDB Tunnel
  - name: "mongodb"
    port: 27017
    client_id: "airgap-mongodb"
    enabled: false
    description: "MongoDB database tunnel - targets are configured on client side"
    
  # Kubernetes API Server Tunnel
  - name: "kubernetes-api"
    port: 6443
    client_id: "airgap-k8s-api"
    enabled: false
    description: "Kubernetes API server tunnel - targets are configured on client side"
    warning_on_fail: true
    
  # Redis Cache Tunnel
  - name: "redis"
    port: 6379
    client_id: "airgap-redis"
    enabled: false
    description: "Redis cache tunnel - targets are configured on client side"
    
  # Elasticsearch Tunnel
  - name: "elasticsearch"
    port: 9200
    client_id: "airgap-elasticsearch"
    enabled: false
    description: "Elasticsearch search tunnel - targets are configured on client side"
    
  # Example: Custom Service
  - name: "custom"
    port: 9999
    client_id: "airgap-custom"
    enabled: false
    description: "Example custom service - targets are configured on client side"