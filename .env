# Tunnel System Docker Compose Configuration
# Copy this file to .env and customize for your environment

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Authentication token (REQUIRED)
# Must match the token configured on tunnel clients
# Use a strong, random token for production
TUNNEL_TOKEN=development-token-do-not-use-in-production

# Use improved implementation (recommended)
USE_IMPROVED=true

# =============================================================================
# TLS/SSL CONFIGURATION
# =============================================================================

# TLS certificate and key paths (optional for development)
# Leave empty to run without TLS
# For production, mount your certificates and set these paths
TLS_CERT_PATH=
TLS_KEY_PATH=

# =============================================================================
# SERVICE TARGETS (NEW: YAML Configuration)
# =============================================================================

# Core service targets (used by docker-config.yaml)
TARGET_WEB=webapp:80
TARGET_DB=database:5432
TARGET_SSH=ssh-server:22
TARGET_MONGODB=ss-mongodb-0.mongodb:27017
TARGET_K8S_API=kubernetes-api:6443

# Optional service targets (NEW: Unlimited services)
TARGET_REDIS=redis:6379
TARGET_ELASTICSEARCH=elasticsearch:9200

# =============================================================================
# OPTIONAL SERVICES (NEW: Runtime Enable/Disable)
# =============================================================================

# Enable/disable optional services at runtime
ENABLE_REDIS=false
ENABLE_ELASTICSEARCH=false

# =============================================================================
# ADVANCED: PORT OVERRIDES (NEW: Runtime Configuration)
# =============================================================================

# Uncomment to override default ports at runtime
# TUNNEL_FORWARDER_WEB_PORT=8080
# TUNNEL_FORWARDER_DATABASE_PORT=5432
# TUNNEL_FORWARDER_SSH_PORT=2222
# TUNNEL_FORWARDER_MONGODB_PORT=27017
# TUNNEL_FORWARDER_KUBERNETES_API_PORT=6443
# TUNNEL_FORWARDER_REDIS_PORT=6379
# TUNNEL_FORWARDER_ELASTICSEARCH_PORT=9200

# =============================================================================
# ADVANCED: TARGET OVERRIDES (NEW: Runtime Configuration)
# =============================================================================

# Uncomment to override service targets at runtime
# TUNNEL_FORWARDER_WEB_TARGET=custom-webapp:8080
# TUNNEL_FORWARDER_DATABASE_TARGET=postgres-cluster:5432
# TUNNEL_FORWARDER_REDIS_TARGET=redis-cluster:6379

# =============================================================================
# DEVELOPMENT PROFILES
# =============================================================================

# Docker Compose profiles to control which services start
# To start optional services: docker-compose --profile optional up -d
COMPOSE_PROFILES=

# =============================================================================
# EXAMPLES
# =============================================================================

# Production with custom Redis and Elasticsearch:
# ENABLE_REDIS=true
# ENABLE_ELASTICSEARCH=true
# TARGET_REDIS=redis-cluster.internal:6379
# TARGET_ELASTICSEARCH=elasticsearch-cluster.internal:9200
# TUNNEL_TOKEN=your-production-token-here

# Development with custom ports:
# TUNNEL_FORWARDER_WEB_PORT=9090
# TUNNEL_FORWARDER_REDIS_ENABLED=true
# TUNNEL_FORWARDER_REDIS_PORT=7000

# Custom service example:
# Add to docker-config.yaml:
# - name: "my-service"
#   port: 9999
#   target: "${TARGET_MY_SERVICE:-my-app:8080}"
#   client_id: "airgap-my-service"
#   enabled: true
# Then enable with: TUNNEL_FORWARDER_MY_SERVICE_ENABLED=true